from fastapi import HTTPExceptionfrom sqlalchemy.orm import Sessionfrom models import Topicsdef topic_create(db: Session, data):    topic = Topics(**data)    db.add(topic)    db.commit()    db.refresh(topic)    return topicdef get_all_topics(db: Session):    topic_query = db.query(Topics).all()    return topic_querydef topic_get(db, topic_id):    topic_query = db.query(Topics).filter(Topics.id == topic_id)    topic = topic_query.first()    if not topic:        raise HTTPException(status_code=404)    return topicdef topic_update(db: Session, topic_id, data):    topic_query = db.query(Topics).filter(Topics.id == topic_id)    topic = topic_query.first()    if not topic:        raise HTTPException(status_code=404)    topic_query.filter(Topics.id == topic_id).update(data, synchronize_session=False)    db.commit()    db.refresh(topic)    return topicdef topic_delete(db: Session, topic_id):    topic_query = db.query(Topics).filter(Topics.id == topic_id)    topic = topic_query.first()    if not topic:        raise HTTPException(status_code=404)    topic_query.delete(synchronize_session=False)    db.commit()